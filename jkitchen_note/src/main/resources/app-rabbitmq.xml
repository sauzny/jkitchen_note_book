<beans 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation=
    "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
     http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">     

    <description>rabbitmq 连接服务配置</description>
    
	<context:component-scan base-package="com.sauzny.jkitchen_note.db.rabbitmq"/> 
    <context:annotation-config/>
    
    <!-- 加载配置文件 --> 
    <context:property-placeholder location="classpath:rabbitmq-config.properties"/> 
    
    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}" virtual-host="${mq.vhost}" />
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
    
    <!-- spring template声明-->
    <rabbit:template id="amqpTemplate" exchange="message_exchange" connection-factory="connectionFactory" message-converter="jsonMessageConverter" />

    <!-- 申明一个消息队列Queue -->
    <!-- 
	    说明： 
	
	durable:是否持久化
	
	exclusive: 仅创建者可以使用的私有队列，断开后自动删除
	
	auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
    
     -->
    <rabbit:queue id="message_queue" name="message_queue" durable="true" auto-delete="false" exclusive="false"/>  

	<!-- 定义交换机 -->
	<!-- 
	说明： 

	rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。 
	
	rabbit:binding：设置消息queue匹配的key
	 -->
	<rabbit:direct-exchange id="message_exchange" name="message_exchange" durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding queue="message_queue" key="message_queue" />
		</rabbit:bindings>
	</rabbit:direct-exchange>
    
    
    <!-- 监听配置 -->
    <!-- 
	    说明： 
	
	concurrency The number of concurrent consumers to start for each listener.
	并发数量的配置
	
	queues：监听的队列，多个的话用逗号（,）分隔 
	
	ref：监听器
	
     -->
    
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" concurrency="40" >
	    <rabbit:listener queues="message_queue" ref="queueListenter"/>
	</rabbit:listener-container>
    
    
</beans>